from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.exceptions import TelegramAPIError
from aiogram.types import (InlineKeyboardMarkup, InlineKeyboardButton)


from apps.database import check_admin, get_all_users, get_my_hash


admin_router = Router()


admin_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–°–æ–æ–±—â–∏—Ç—å –æ —Ç–µ—Ö-–ø–µ—Ä–µ—Ä—ã–≤–µ', callback_data='message1')],
    [InlineKeyboardButton(text='–ü–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–æ–º', callback_data='message2')],
    [InlineKeyboardButton(text='–ü–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç–≥–∫', callback_data='message3')]
    ])
subscribe_menu = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url='https://t.me/+kKVb9YkgDF03ZDdi')]])
share_menu = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text=f'üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è', url="https://t.me/share/url?url=–ü–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µüëâ t.me/Anonim_Messssage_Bot")]])


@admin_router.message(Command('admin'))
async def admin(message: Message):
    status = await check_admin(message.from_user.id)
    if status == 'M':
        name = message.from_user.first_name
        await message.answer(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å, <b>{name}</b>!", reply_markup=admin_menu, parse_mode="HTML")
    else:
        await message.answer(text="‚ö†Ô∏è <b>–£–ø—Å!</b>\n\n–¢—ã <i>–Ω–µ —è–≤–ª—è–µ—à—å—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</i> —ç—Ç–æ–≥–æ –±–æ—Ç–∞ üö´\n–î–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ üõ°\n\n–ï—Å–ª–∏ —Ç—ã —Å—á–∏—Ç–∞–µ—à—å, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –æ–±—Ä–∞—Ç–∏—Å—å –≤ –Ω–∞—à—É <b>–ø–æ–¥–¥–µ—Ä–∂–∫—É</b> üõ†", parse_mode="HTML")


@admin_router.callback_query(F.data == 'message3')
async def subscribe(callback: CallbackQuery):
    users = await get_all_users()
    sent = 0
    for id in users:
        try:
            await callback.bot.send_message(
                chat_id=id,
                text="üì¢ <b>–ë—É–¥—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π!</b>\n\n–ß—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à <b>Telegram-–∫–∞–Ω–∞–ª</b> üíå\n–¢–∞–º —Ç—ã –Ω–∞–π–¥—ë—à—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∞–Ω–æ–Ω—Å—ã, —Å–æ–≤–µ—Ç—ã –∏ —Å—é—Ä–ø—Ä–∏–∑—ã –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞—à–µ–≥–æ —á–∞—Ç–∞ üéÅ",
                parse_mode="HTML",
                reply_markup=subscribe_menu
            )
            sent += 1
        except TelegramAPIError as e:
            print(f"–û—à–∏–±–∫–∞, –Ω–µ –≤—Å–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, {e}")
    await callback.answer(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {sent} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!")


@admin_router.callback_query(F.data == 'message2')
async def share(callback: CallbackQuery):
    users = await get_all_users()
    sent = 0
    for id in users:
        try:
            hash = await get_my_hash(id)
            await callback.bot.send_message(
                chat_id=id,
                text="ü§ù <b>–ü–æ–¥–µ–ª–∏—Å—å —Å –¥—Ä—É–≥–æ–º!</b>\n\n–•–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª—å—à–µ –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Å—é—Ä–ø—Ä–∏–∑–æ–≤? üéÅ\n–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é —Å–µ–∫—Ä–µ—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –¥—Ä—É–≥—É –∏ –ø—É—Å—Ç—å –æ–Ω —Ç–æ–∂–µ –ø–æ–ø—Ä–æ–±—É–µ—Ç –Ω–∞—à –±–æ—Ç üíå\n\nüì§ –ß–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π ‚Äî —Ç–µ–º –≤–µ—Å–µ–ª–µ–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ! üòé",
                parse_mode="HTML",
                reply_markup=share_menu
            )
            sent += 1
        except TelegramAPIError as e:
            print(f"–û—à–∏–±–∫–∞, –Ω–µ –≤—Å–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, {e}")
    await callback.answer(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {sent} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!")


@admin_router.callback_query(F.data == 'message1')
async def tech(callback: CallbackQuery):
    users = await get_all_users()
    sent = 0
    for id in users:
        try:
            await callback.bot.send_message(
                chat_id=id,
                text="üõ† <b>–í–Ω–∏–º–∞–Ω–∏–µ!</b>\n\n–ó–∞–≤—Ç—Ä–∞ —É –Ω–∞—Å –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è <i>—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ä—ã–≤</i> ‚è≥\n–í–æ –≤—Ä–µ–º—è –Ω–µ–≥–æ –±–æ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø–µ—Ä–µ–±–æ—è–º–∏ ‚ö°\n\nüôè –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏–º–µ–π —ç—Ç–æ –≤ –≤–∏–¥—É –∏ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π ‚Äî –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞ –º—ã —Å–Ω–æ–≤–∞ –±—É–¥–µ–º —Ä–∞–¥—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–≤–æ–∏ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üíå",
                parse_mode="HTML"
            )
            sent += 1
        except TelegramAPIError as e:
            print(f"–û—à–∏–±–∫–∞, –Ω–µ –≤—Å–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, {e}")
    await callback.answer(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {sent} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!")
